var CameraControl, EventEmitter, expect, rewire, sinon;

expect = require("chai").expect;

rewire = require("rewire");

sinon = require("sinon");

CameraControl = rewire("../lib/camera_control");

EventEmitter = require("events").EventEmitter;

describe("CameraControl", function() {
  var execStub, gphoto2Stub, gphotoEmitter, spawnStub, subject;
  execStub = null;
  spawnStub = null;
  gphoto2Stub = null;
  gphotoEmitter = new EventEmitter();
  subject = null;
  beforeEach(function() {
    var fakeGphoto;
    execStub = sinon.stub();
    spawnStub = sinon.stub();
    fakeGphoto = {
      stdout: gphotoEmitter
    };
    gphoto2Stub = sinon.stub(fakeGphoto);
    spawnStub.returns(gphoto2Stub);
    CameraControl.__set__("exec", execStub);
    return CameraControl.__set__("spawn", spawnStub);
  });
  describe("#init", function() {
    return it("returns EventEmitter", function() {
      var ee;
      ee = new CameraControl().init();
      return expect(ee).to.be["instanceof"](EventEmitter);
    });
  });
  return describe("events", function() {
    return describe("on 'snap'", function() {
      beforeEach(function() {
        this.timeout = 1000;
        return subject = new CameraControl().init();
      });
      it("kills PTPCamera", function() {
        subject.emit("snap");
        return expect(execStub.calledWith("killall PTPCamera")).to.be["true"];
      });
      it("emits 'camera_begin_snap'", function() {
        var spy;
        spy = sinon.spy();
        subject.on("camera_begin_snap", spy);
        subject.emit("snap");
        return expect(spy.called).to.be["true"];
      });
      return describe("calling gphoto2 on successful capture", function() {
        it("calls gphoto2", function() {
          subject.emit("snap");
          return expect(spawnStub.calledWith("gphoto2")).to.be["true"];
        });
        it("emits 'camera_snapped' after gphoto sends confirmation", function() {
          var spy;
          spy = sinon.spy();
          subject.on("photo_saved", spy);
          subject.emit("snap");
          gphotoEmitter.emit("data", "New file is in abcdefg.jpg");
          return setTimeout(function() {
            return expect(spy.called).to.be["true"];
          }, 100);
        });
        return it("emits 'photo_saved' with save metadata", function() {
          var spy;
          spy = sinon.spy();
          subject.on("photo_saved", spy);
          subject.emit("snap");
          gphotoEmitter.emit("data", "Saving file as abcdefg.jpg");
          return setTimeout(function() {
            return expect(spy.called).to.be["true"];
          }, 100);
        });
      });
    });
  });
});

// ---
// generated by coffee-script 1.9.2
